
				Worst Case					Worst Case
Method	BST		Time Complexity	Hash Table	Time Complexity
				of BST						of HT

Search	251		O (n)			75				O (n)


Insert	93 		O (n)			33				O (n)


Delete	160		O (n)			71				O (n)


Sort	37556	O (n)			423841			O (n*log n)


Range
Query 	47		O (n)			4547			O (n)
(n=10)

Range
Query	50		O (n)			4858			O (n)
(n=100)

Range
Query	148		O (n)			4228			O (n)
(n=1000)


*all in microseconds

We found that the hash table is really efficient with searching, inserting and deleting. However the BST is more efficient for ranged searching and sorting. This is because the BST stores all nodes in a sorted manner, whereas hash tables focus on fast and immediate entry over organization.

The range queries can be made more efficient in BSTs because we only look for nodes based on whether they're inside the range. The hash table, on the other hand, has to iterate through all values. 